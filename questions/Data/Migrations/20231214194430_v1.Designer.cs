// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using questions.Data;

#nullable disable

namespace questions.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231214194430_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("questions.Data.Models.EXAM", b =>
                {
                    b.Property<decimal>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ID"));

                    b.Property<decimal?>("ExamRepositoryID")
                        .HasColumnType("decimal(10,0)");

                    b.Property<decimal>("REPO_ID")
                        .HasColumnType("decimal(10)");

                    b.HasKey("ID");

                    b.HasIndex("ExamRepositoryID");

                    b.ToTable("EXAMS");
                });

            modelBuilder.Entity("questions.Data.Models.EXAM_QUETION", b =>
                {
                    b.Property<decimal>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ID"));

                    b.Property<decimal?>("ANSWER_ID")
                        .HasColumnType("decimal(10)");

                    b.Property<decimal>("EXAM_ID")
                        .HasColumnType("decimal(10)");

                    b.Property<decimal?>("ExamID")
                        .HasColumnType("decimal(10,0)");

                    b.Property<decimal>("QUESTION_ID")
                        .HasColumnType("decimal(10)");

                    b.Property<decimal?>("QuestionID")
                        .HasColumnType("decimal(10,0)");

                    b.Property<decimal?>("SelectionID")
                        .HasColumnType("decimal(10,0)");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("SelectionID");

                    b.ToTable("EXAMS_QUETIONS");
                });

            modelBuilder.Entity("questions.Data.Models.EXAM_REPOSITORY", b =>
                {
                    b.Property<decimal>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ID"));

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("NAME");

                    b.ToTable("EXAM_REPOSITORIES");
                });

            modelBuilder.Entity("questions.Data.Models.QUESTION", b =>
                {
                    b.Property<decimal>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ID"));

                    b.Property<decimal?>("ExamRepositoryID")
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("IMAGE_PATH")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("QUESTION_TEXT")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("REPO_ID")
                        .HasColumnType("decimal(10)");

                    b.HasKey("ID");

                    b.HasIndex("ExamRepositoryID");

                    b.HasIndex("IMAGE_PATH");

                    b.HasIndex("QUESTION_TEXT");

                    b.ToTable("QUESTIONS");
                });

            modelBuilder.Entity("questions.Data.Models.SELECTION", b =>
                {
                    b.Property<decimal>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ID"));

                    b.Property<bool?>("IS_ANSWER")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<decimal>("QUESTION_ID")
                        .HasColumnType("decimal(10)");

                    b.Property<decimal?>("QuestionID")
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("SELECTION_TEXT")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ID");

                    b.HasIndex("IS_ANSWER");

                    b.HasIndex("QuestionID");

                    b.HasIndex("SELECTION_TEXT");

                    b.ToTable("SELECTIONS");
                });

            modelBuilder.Entity("questions.Data.Models.EXAM", b =>
                {
                    b.HasOne("questions.Data.Models.EXAM_REPOSITORY", "ExamRepository")
                        .WithMany()
                        .HasForeignKey("ExamRepositoryID");

                    b.Navigation("ExamRepository");
                });

            modelBuilder.Entity("questions.Data.Models.EXAM_QUETION", b =>
                {
                    b.HasOne("questions.Data.Models.EXAM", "Exam")
                        .WithMany("ExamQuestions")
                        .HasForeignKey("ExamID");

                    b.HasOne("questions.Data.Models.QUESTION", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionID");

                    b.HasOne("questions.Data.Models.SELECTION", "Selection")
                        .WithMany()
                        .HasForeignKey("SelectionID");

                    b.Navigation("Exam");

                    b.Navigation("Question");

                    b.Navigation("Selection");
                });

            modelBuilder.Entity("questions.Data.Models.QUESTION", b =>
                {
                    b.HasOne("questions.Data.Models.EXAM_REPOSITORY", "ExamRepository")
                        .WithMany("Questions")
                        .HasForeignKey("ExamRepositoryID");

                    b.Navigation("ExamRepository");
                });

            modelBuilder.Entity("questions.Data.Models.SELECTION", b =>
                {
                    b.HasOne("questions.Data.Models.QUESTION", "Question")
                        .WithMany("Selections")
                        .HasForeignKey("QuestionID");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("questions.Data.Models.EXAM", b =>
                {
                    b.Navigation("ExamQuestions");
                });

            modelBuilder.Entity("questions.Data.Models.EXAM_REPOSITORY", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("questions.Data.Models.QUESTION", b =>
                {
                    b.Navigation("Selections");
                });
#pragma warning restore 612, 618
        }
    }
}
